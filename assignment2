import numpy as np
from numpy import sin , cos

#1번문제
A = np.array([[1,2,4],[3,8,14],[2,6,13]])
Aa = A.copy()

B = np.array([[3],[13],[4]])
Ba = B.copy()

sol = np.zeros((3,1))
               
#가우스 소거
lam1 = A[2,0]/A[0,0]
Aa[2,:] = Aa[2,:] - lam1*Aa[0,:]
Ba[2] = Ba[2] - lam1*Ba[0]

lam2 = Aa[1,0]/Aa[0,0]
Aa[1,:] = Aa[1,:] - lam2*Aa[0,:]
Ba[1] = Ba[1] - lam2*Ba[0]

lam3 = Aa[2,1]/Aa[1,1]
Aa[2,:] = Aa[2,:] - lam3*Aa[1,:]
Ba[2] = Ba[2] - lam3*Ba[1]


#후진대입법
sol[2]= Ba[2]/Aa[2,2]
sol[1]=(Ba[1]-sol[2]*Aa[1,2])/Aa[1,1]
sol[0]=(Ba[0]-sol[2]*A[0,2]-sol[1]*A[0,1])/Aa[0,0]


#결과
#print('from Gauss = \n',sol,'\n','from linalg = \n',np.linalg.solve(A,B))


#2번문제
A = np.array([[0,0,2,1,2],[0,1,0,-2,1],[1,2,0,-2,0],[0,0,0,-1,1],[0,1,-1,1,-1]])
Aa = A.copy()

B = np.array([[1],[1],[-4],[-2],[-1]])
Ba = B.copy()

sol = np.zeros((5,1))

#정렬
Aa[0,:] = Aa[0,:] + Aa[0,:] + Aa[1,:] + Aa[2,:] + Aa[3,:] + Aa[4,:]
Ba[0] = Ba[0] + Ba[0] + Ba[1] + Ba[2] + Ba[3] + Ba[4]

Aa[1,:] = Aa[1,:] + Aa[0,:] + Aa[1,:] + Aa[2,:] + Aa[3,:] + Aa[4,:]
Ba[1] = Ba[1] + Ba[0] + Ba[1] + Ba[2] + Ba[3] + Ba[4]

Aa[2,:] = Aa[2,:] + Aa[0,:] + Aa[1,:] + Aa[2,:] + Aa[3,:] + Aa[4,:]
Ba[2] = Ba[2] + Ba[0] + Ba[1] + Ba[2] + Ba[3] + Ba[4]

Aa[3,:] = Aa[3,:] + Aa[0,:] + Aa[1,:] + 2*Aa[2,:] + Aa[3,:] + Aa[4,:]
Ba[3] = Ba[3] + Ba[0] + Ba[1] + 2*Ba[2] + Ba[3] + Ba[4]

Aa[4,:] = Aa[4,:] + Aa[0,:] + Aa[1,:] + Aa[2,:] + Aa[3,:] + Aa[4,:]
Ba[4] = Ba[4] + Ba[0] + Ba[1] + Ba[2] + Ba[3] + Ba[4]

#가우스 소거
lam1 = Aa[4,0]/Aa[0,0]
Aa[4,:] = Aa[4,:] - lam1*Aa[0,:]
Ba[4] = Ba[4] - lam1*Ba[0]

lam2 = Aa[3,0]/Aa[0,0]
Aa[3,:] = Aa[3,:] - lam2*Aa[0,:]
Ba[3] = Ba[3] - lam2*Ba[0]

lam3 = Aa[2,0]/Aa[0,0]
Aa[2,:] = Aa[2,:] - lam3*Aa[0,:]
Ba[2] = Ba[2] - lam3*Ba[0]

lam4 = Aa[1,0]/Aa[0,0]
Aa[1,:] = Aa[1,:] - lam4*Aa[0,:]
Ba[1] = Ba[1] - lam4*Ba[0]


lam5 = Aa[4,1]/Aa[1,1]
Aa[4,:] = Aa[4,:] - lam5*Aa[1,:]
Ba[4] = Ba[4] - lam5*Ba[1]

lam6 = Aa[3,1]/Aa[1,1]
Aa[3,:] = Aa[3,:] - lam6*Aa[1,:]
Ba[3] = Ba[3] - lam6*Ba[1]

lam7 = Aa[2,1]/Aa[1,1]
Aa[2,:] = Aa[2,:] - lam7*Aa[1,:]
Ba[2] = Ba[2] - lam7*Ba[1]


lam8 = Aa[4,2]/Aa[2,2]
Aa[4,:] = Aa[4,:] - lam8*Aa[2,:]
Ba[4] = Ba[4] - lam8*Ba[2]

lam9 = Aa[3,2]/Aa[2,2]
Aa[3,:] = Aa[3,:] - lam9*Aa[2,:]
Ba[3] = Ba[3] - lam9*Ba[2]


lam10 = Aa[4,3]/Aa[3,3]
Aa[4,:] = Aa[4,:] - lam10*Aa[3,:]
Ba[4] = Ba[4] - lam10*Ba[3]


#후진대입법
sol[4]= Ba[4]/Aa[4,4]
sol[3]= (Ba[3]-sol[4]*Aa[3,4])/Aa[3,3]
sol[2]= (Ba[2]-sol[4]*Aa[2,4]-sol[3]*Aa[2,3])/Aa[2,2]
sol[1]= (Ba[1]-sol[4]*Aa[1,4]-sol[3]*Aa[1,3]-sol[2]*Aa[1,2])/Aa[1,1]
sol[0]= (Ba[0]-sol[4]*Aa[0,4]-sol[3]*Aa[0,3]-sol[2]*Aa[0,2]-sol[1]*Aa[0,1])/Aa[0,0]


#결과
print('from Gauss = \n',sol,'\n','from linalg = \n',np.linalg.solve(A,B))


#3번문제

def gauss(a,b):

for k in range(n-1,0,-1): 
    for i in range(k-1,-1,-1): 
        if a[i,k] != 0.0 :
       
        lam = a[i,k]/a[k,k] 
        a[i,k:n] = a[i,k:n] - lam*a[k,k:n] 
        b[i] = b[i] - lam*b[k]
    
    
for k in range(-1,n-1,1):
x[k] = ( b[k] - np.dot(a[k,k+1:n],x[k+1:n]) )/a[k,k]

return x


#4번문제
#5번문제

m1 = 10
m2 = 4
m3 = 5
m4 = 6
g = 10

a = ((m1+m2+m3)*g*sin(np.deg2rad(40)) - m4*g)/(m1+m2+m3+m4) 
T1= (m1 * g * sin(np.deg2rad(40))) - (m1 * a)
T2= (m2 * g * sin(np.deg2rad(40)) - m2 * a) + ((m1 * g * sin(np.deg2rad(40))) - (m1 * a))
T3= (m3 * g * sin - m2 * a) + ((m2 * g * sin(np.deg2rad(40)) - m2 * a) + ((m1 * g * sin(np.deg2rad(40))) - (m1 * a)))
